# Test: Compound Assignments
# Purpose: Test compound assignment operators (+=, -=, *=, /=)
# Category: Basic Syntax - Basic Assignments and Variables

log("Starting Compound Assignments test")

# Test 1: Addition compound assignment
x = 10
x += 5
assert x == 15, f"Expected 15, got {x}"
log("✅ Addition compound assignment (+=) works")

# Test 2: Subtraction compound assignment
y = 20
y -= 8
assert y == 12, f"Expected 12, got {y}"
log("✅ Subtraction compound assignment (-=) works")

# Test 3: Multiplication compound assignment
z = 6
z *= 3
assert z == 18, f"Expected 18, got {z}"
log("✅ Multiplication compound assignment (*=) works")

# Test 4: Division compound assignment
w = 20
w /= 4
assert w == 5.0, f"Expected 5.0, got {w}"
log("✅ Division compound assignment (/=) works")

# Test 5: Compound assignment with expressions
a = 10
b = 3
a += b * 2
assert a == 16, f"Expected 16, got {a}"
log("✅ Compound assignment with expressions works")

# Test 6: Compound assignment with lists
nums = [1, 2, 3, 4]
nums[0] += 10
nums[2] *= 3
assert nums == [11, 2, 9, 4], f"Expected [11, 2, 9, 4], got {nums}"
log("✅ Compound assignment with list indices works")

# Test 7: Compound assignment with dictionaries
scores = {"alice": 100, "bob": 80}
scores["alice"] += 20
scores["bob"] -= 10
assert scores["alice"] == 120, f"Expected 120, got {scores['alice']}"
assert scores["bob"] == 70, f"Expected 70, got {scores['bob']}"
log("✅ Compound assignment with dictionary keys works")

# Test 8: Compound assignment with strings
msg = "Hello"
msg += " World"
assert msg == "Hello World", f"Expected 'Hello World', got '{msg}'"
log("✅ Compound assignment with strings works")

# Test 9: Compound assignment in loops
total = 0
for i in [1, 2, 3, 4, 5]:
    total += i
assert total == 15, f"Expected 15, got {total}"
log("✅ Compound assignment in loops works")

# Test 10: Compound assignment with floats
f = 10.5
f += 2.5
assert f == 13.0, f"Expected 13.0, got {f}"
log("✅ Compound assignment with floats works")

# Test 11: Multiple compound assignments
counter = 0
counter += 1
counter += 2
counter += 3
assert counter == 6, f"Expected 6, got {counter}"
log("✅ Multiple compound assignments work")

# Test 12: Compound assignment with negative numbers
value = 10
value += -5
assert value == 5, f"Expected 5, got {value}"
log("✅ Compound assignment with negative numbers works")

# Test 13: Compound assignment with zero
num = 10
num += 0
assert num == 10, f"Expected 10, got {num}"
log("✅ Compound assignment with zero works")

# Test 14: Compound assignment with large numbers
big = 1000
big *= 1000
assert big == 1000000, f"Expected 1000000, got {big}"
log("✅ Compound assignment with large numbers works")

# Test 15: Compound assignment with division by zero (should handle gracefully)
try:
    x = 10
    x /= 0
    log("⚠️ Division by zero did not raise error")
except:
    log("✅ Division by zero handled appropriately")
log("✅ Compound assignment error handling works")

# Test 16: Compound assignment with different data types
mixed = 10
mixed += 5.5
assert mixed == 15.5, f"Expected 15.5, got {mixed}"
log("✅ Compound assignment with mixed data types works")

# Test 17: Compound assignment with complex expressions
result = 10
result += (5 * 2) - 3
assert result == 17, f"Expected 17, got {result}"
log("✅ Compound assignment with complex expressions works")

# Test 18: Compound assignment with function calls
def get_increment():
    return 5

value = 10
value += get_increment()
assert value == 15, f"Expected 15, got {value}"
log("✅ Compound assignment with function calls works")

# Test 19: Compound assignment with conditional expressions
base = 10
base += 5 if true else 10
assert base == 15, f"Expected 15, got {base}"
log("✅ Compound assignment with conditional expressions works")

# Test 20: Compound assignment with list operations
numbers = [1, 2, 3]
numbers[1] += 10
assert numbers[1] == 12, f"Expected 12, got {numbers[1]}"
log("✅ Compound assignment with list operations works")

log("Compound Assignments test completed successfully") 