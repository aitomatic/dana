# POET decorator chaining test fixture

@poet(domain="domain1")
@poet(domain="domain2") 
def chained_function(x: int) -> int:
    """Function with multiple POET decorators."""
    return x * 2

@poet(domain="math", retries=3)
@poet(domain="computation", timeout=60)
def double_chained(a: int, b: int) -> int:
    """Function with multiple complex decorators."""
    return a + b

# Test chained function calls
result1 = chained_function(5)
result2 = double_chained(10, 15) 