# Simple test for Promise transparency without nested functions
# Copyright © 2025 Aitomatic, Inc.

def lazy_five():
    return 5

def lazy_three():
    return 3

def lazy_list():
    return [1, 2, 3, 4, 5]

def test_simple_promise_arithmetic():
    lazy_a = lazy_five()
    lazy_b = lazy_three()
    eager_c = 2
    
    # All arithmetic should work transparently
    assert lazy_a + lazy_b == 8
    assert lazy_a - lazy_b == 2  
    assert lazy_a * lazy_b == 15
    assert lazy_a / lazy_b == 5/3
    assert lazy_a ** eager_c == 25
    assert lazy_a % lazy_b == 2
    
    # Mixed Promise[T] and concrete values
    assert lazy_a + eager_c == 7
    assert eager_c * lazy_a == 10
    
    print("✓ Simple Promise[T] arithmetic operations transparent")

def test_simple_promise_len():
    lazy_lst = lazy_list()
    
    # List operations
    assert len(lazy_lst) == 5
    assert lazy_lst[0] == 1
    assert lazy_lst[1:3] == [2, 3]
    assert 3 in lazy_lst
    
    print("✓ Simple Promise[T] len operations transparent")

# Run tests
test_simple_promise_arithmetic()
test_simple_promise_len()

print("All simple Promise[T] tests passed!") 