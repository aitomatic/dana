# Test for Promise subscript with lambda functions
# Copyright © 2025 Aitomatic, Inc.

def create_calculator():
    return {"add": lambda x, y :: x + y, "multiply": lambda x, y :: x * y}

def lazy_calculator():
    return create_calculator()

def test_lambda_subscript():
    lazy_calc = lazy_calculator()
    
    # Test accessing lambda functions from Promise
    add_func = lazy_calc["add"]
    multiply_func = lazy_calc["multiply"]
    
    # Test calling the lambda functions
    result1 = add_func(3, 4)
    result2 = multiply_func(5, 6)
    
    assert result1 == 7
    assert result2 == 30
    
    print("✓ Promise lambda subscript access working")

def test_direct_lambda_call():
    lazy_calc = lazy_calculator()
    
    # Test direct lambda function calls
    result1 = lazy_calc["add"](3, 4)
    result2 = lazy_calc["multiply"](5, 6)
    
    assert result1 == 7
    assert result2 == 30
    
    print("✓ Promise direct lambda calls working") 