# Simplified Dana Struct Implementation Tests
# - Focuses on comprehensive struct functionality testing
# - Uses Ubuntu + Python 3.12 (matches main CI environment)
# - Runs all struct phases with mock LLM to avoid API dependencies
# - Validates integration with core Dana features

name: Dana Struct Tests

on:
  push:
    paths:
      - 'opendxa/dana/sandbox/interpreter/**'
      - 'opendxa/dana/sandbox/parser/**'
      - 'tests/dana/sandbox/interpreter/test_struct_*'
      - '.github/workflows/struct-tests.yml'
  pull_request:
    paths:
      - 'opendxa/dana/sandbox/interpreter/**'
      - 'opendxa/dana/sandbox/parser/**'
      - 'tests/dana/sandbox/interpreter/test_struct_*'
      - '.github/workflows/struct-tests.yml'

jobs:
  struct-functionality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    
    - name: Install dependencies
      run: uv sync --extra dev
    
    - name: Validate syntax and imports
      run: |
        python -m py_compile opendxa/dana/sandbox/parser/transformer/expression_transformer.py
        python -c "import opendxa.dana.sandbox.interpreter.struct_system; print('âœ… Struct system imports successfully')"
    
    - name: Run all struct tests
      env:
        OPENDXA_MOCK_LLM: "true"
        OPENDXA_USE_REAL_LLM: "false"
        PYTHONPATH: ${{ github.workspace }}
      run: |
        echo "Running comprehensive struct test suite..."
        uv run pytest tests/dana/sandbox/interpreter/test_struct_* -v --tb=short
    
    - name: Test struct integration with Dana features
      env:
        OPENDXA_MOCK_LLM: "true"
        OPENDXA_USE_REAL_LLM: "false"
        PYTHONPATH: ${{ github.workspace }}
      run: |
        echo "Testing struct integration scenarios..."
        uv run pytest tests/dana/sandbox/interpreter/test_struct_phase4.py::TestStructMethodIntegration -v
        uv run pytest tests/dana/sandbox/interpreter/test_struct_phase5.py::TestComprehensiveIntegration -v

  # Optional: Add periodic cross-platform validation (can be triggered manually)
  cross-platform-validation:
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[test-all-platforms]')
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ["3.12"]
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    
    - name: Install dependencies
      run: uv sync --extra dev
    
    - name: Quick struct validation
      env:
        OPENDXA_MOCK_LLM: "true"
        OPENDXA_USE_REAL_LLM: "false"
        PYTHONPATH: ${{ github.workspace }}
      run: uv run pytest tests/dana/sandbox/interpreter/test_struct_phase1.py -x --tb=line 