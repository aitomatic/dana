# GitHub Action to run MyPy type checking
# - Runs on Python 3.12
# - Uses MyPy for static type analysis
# - Focuses on core modules only for faster execution
# - Non-blocking but provides useful type feedback
# - DISABLED: Only runs manually to reduce CI noise

name: Type Check

on: 
  # DISABLED: Commented out to reduce CI noise and speed
  # push:
  #   branches: [main, master]
  # pull_request:
  #   branches: [main, master]
  workflow_dispatch:  # Allow manual triggering only

jobs:
  type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-
    - name: Install dependencies
      run: uv sync --extra dev
    - name: Type check core modules (Non-blocking)
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        echo "üîç Running MyPy type checking on core modules (non-blocking)..."
        echo "Focusing on essential modules for faster execution"
        
        # Check only core modules that are most critical for type safety
        uv run mypy dana/core/ dana/common/ || {
          echo "‚ö†Ô∏è MyPy found type issues in core modules"
          echo "This is expected during development - type coverage is being improved gradually"
          echo "Run 'uv run mypy dana/core/ dana/common/' locally to see details"
        }
        
        echo "‚úÖ Type checking completed"
    - name: Basic import check
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        echo "üéØ Running basic import checks..."
        uv run python -c "
        import sys
        print(f'Python version: {sys.version}')
        
        # Test only critical imports
        modules_to_test = [
            'dana.common',
            'dana.core.lang.dana_sandbox'
        ]
        
        for module in modules_to_test:
            try:
                __import__(module)
                print(f'‚úÖ {module} imports successfully')
            except Exception as e:
                print(f'‚ö†Ô∏è {module} import issue: {e}')
                
        print('‚úÖ Basic import checks completed')
        " 