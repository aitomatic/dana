# GitHub Action to run MyPy type checking
# - Runs on Python 3.12
# - Uses MyPy for static type analysis
# - Follows OpenDXA type hint requirements
# - Validates the comprehensive type annotations in the codebase
# This ensures type safety and catches type-related bugs early

name: Type Check

on: 
  push:
    branches: [main, master, feat/llm-poet]
  pull_request:
    branches: [main, master]
  workflow_dispatch:  # Allow manual triggering

jobs:
  type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install uv
      uses: astral-sh/setup-uv@v6
    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-
    - name: Install dependencies
      run: uv sync --extra dev
    - name: Type check with MyPy (Non-blocking)
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        # Run mypy on the main package - report issues but don't fail CI
        echo "üîç Running MyPy type checking (non-blocking)..."
        uv run mypy dana/ --show-error-codes --no-strict-optional --allow-untyped-calls --ignore-missing-imports || {
          echo "‚ö†Ô∏è MyPy found type issues in main package"
          echo "This is expected during development - run 'uv run mypy dana/' locally to see details"
          echo "Total type errors shown above - working to improve type coverage gradually"
          echo "Continuing CI pipeline..."
        }
    - name: Basic import and syntax check
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        # Basic sanity check - ensure core modules can be imported
        echo "üéØ Running basic import and syntax checks..."
        echo "Checking that core modules import without syntax errors"
        uv run python -c "
        import sys
        print(f'Python version: {sys.version}')
        
        # Test core imports one by one for better error reporting
        modules_to_test = [
            'dana.common',
            'dana.core.lang.dana_sandbox', 
            'dana.frameworks.poet'
        ]
        
        for module in modules_to_test:
            try:
                __import__(module)
                print(f'‚úÖ {module} imports successfully')
            except Exception as e:
                print(f'‚ö†Ô∏è {module} import issue: {e}')
                # Don't fail CI for import issues during development
                
        print('‚úÖ Basic import checks completed')
        " 