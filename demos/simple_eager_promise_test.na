# Simple EagerPromise Test
# 
# Test the new clean EagerPromise implementation

import time

def expensive_operation():
    print("üîÑ Starting expensive operation...")
    time.sleep(0.1)  # 100ms delay
    result = "expensive_result"
    print("‚úÖ Expensive operation completed!")
    return result

def return_function():
    print("üìù Creating return function...")
    return expensive_operation()

print("=== SIMPLE EAGERPROMISE TEST ===")

print("\n1. Test immediate return")
start_time = time.time()

# This should return immediately
result = return_function()
creation_time = time.time() - start_time

print(f"Function returned in {creation_time:.3f}s!")
print(f"Result type: {type(result)}")
print(f"Result string: {str(result)}")

# Try to access immediately
print("\nTrying to access immediately...")
try:
    value = result
    print(f"Successfully accessed! Value: {value}")
except Exception as e:
    print(f"Access failed (expected): {e}")

# Wait and try again
print("\nWaiting 200ms and trying again...")
time.sleep(0.2)
try:
    value = result
    print(f"Successfully accessed! Value: {value}")
except Exception as e:
    print(f"Still failed: {e}")

print("\n=== TEST COMPLETE ===") 