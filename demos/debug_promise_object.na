# Debug Promise Object
print("=== DEBUG PROMISE OBJECT ===")

def lazy_five():
    print("lazy_five() called - START")
    print("About to execute return 5")
    result = 5
    print(f"Return value: {result}")
    return result

def eager_five():
    print("eager_five() called - START")
    print("About to execute deliver 5")
    deliver 5

print("1. Testing return (should create Promise)...")
print("Calling lazy_five()...")
lazy_result = lazy_five()
print(f"lazy_result type: {type(lazy_result)}")
print(f"lazy_result value: {lazy_result}")

print("\n2. Testing deliver (should create concrete value)...")
print("Calling eager_five()...")
eager_result = eager_five()
print(f"eager_result type: {type(eager_result)}")
print(f"eager_result value: {eager_result}")

print("\n3. Testing direct assignment...")
direct_result = 5
print(f"direct_result type: {type(direct_result)}")
print(f"direct_result value: {direct_result}")

print("\n4. Testing object inspection...")
print(f"lazy_result.__class__: {lazy_result.__class__}")
print(f"eager_result.__class__: {eager_result.__class__}")
print(f"direct_result.__class__: {direct_result.__class__}")

print("=== DEBUG COMPLETE ===") 