# Simple Travel Planner Module Agent
# Basic travel planning agent for Dana multi-agent system

# System variables (required for module agents)
system:agent_name = "Travel Planner"
system:agent_description = "Plans trips and provides travel recommendations"

# Set up web search resource
websearch = use("mcp", url="http://localhost:8880/websearch")

# Required solve function for module agents
def solve(task: str) -> str:
    """Main solve function - required for module agents"""
    return plan_trip(task)

# Helper function for trip planning
def plan_trip(request: str) -> str:
    """Plan a trip based on the request"""
    search_query = f"travel guide {request}"
    travel_info = websearch.search(search_query)
    plan = reason(f"Create a travel plan based on: {travel_info}")
    return plan

# Helper function for accommodation
def find_accommodation(location: str) -> str:
    """Find accommodation options"""
    search_query = f"hotels accommodation {location}"
    results = websearch.search(search_query)
    return results

# Helper function for cost estimation
def estimate_costs(destination: str, duration: str) -> str:
    """Estimate travel costs"""
    cost_info = reason(f"Estimate travel costs for {destination} for {duration}")
    return cost_info

# Example usage and testing (commented out for production)
# print("Travel Planner Module Loaded")
# print(f"Agent Name: {system:agent_name}")
# print(f"Description: {system:agent_description}")

# Test the solve function
# test_result = solve("Plan a 5-day trip to Tokyo in spring")
# print(f"Test result: {test_result[:100]}...") 