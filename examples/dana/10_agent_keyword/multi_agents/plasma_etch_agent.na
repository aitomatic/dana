sensor = use("mcp", url="https://demo.mcp.aitomatic.com/sensors")
kb = use("rag", sources=["knowledge_base/plasma_etch_agent.json"])

agent PlasmaEtchAgent:
    name : str = "Plasma Etch Agent"
    description : str = "Expert agent in Plasma Etching Equipment Troubleshooting"
    resources : list = [sensor, kb]


def solve(plasma_etch_agent : PlasmaEtchAgent, problem : str) -> str:
    steps = plasma_etch_agent.plan(f" Create a plan to solve the problem: {problem} with maximum 3 steps.")
    context = []
    for step in steps:
        print("-*100")
        print(step)
        answer : str = reason(f"Your goal is to solve this problem {problem}. This is the current step : {step}. Execute the step and return everything that can help solve the problem.", resources=plasma_etch_agent.resources)
        print(answer)
        context.append(answer)
        print("-*100")
    final_answer : str = reason(f"Your goal is to solve this problem {problem}. This is the context that can help solve the problem: {context}. Return the final answer with comprehensive details and logical reasoning.", resources=[])
    return final_answer