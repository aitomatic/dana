# Enhanced set_model() Example - Provider Intelligence & Beautiful Output
# This demonstrates the latest provider-intelligent model switching with beautiful output

log("ðŸš€ Enhanced set_model Example - Latest Features")

# === VIEW ENHANCED MODEL DISPLAY ===
log("1. Viewing enhanced model display with provider grouping:")
current_model = set_model()  # No parameters - displays enhanced information
log(f"Function returned: {current_model}")

# === SMART PROVIDER MATCHING ===
log("\n2. Smart provider matching - just type provider names:")

log("Setting model with just 'openai' (picks best OpenAI model)...")
model = set_model("openai")
log(f"âœ… Smart match result: {model}")

log("Setting model with just 'anthropic' (picks best Claude model)...")
model = set_model("anthropic")
log(f"âœ… Smart match result: {model}")

log("Setting model with just 'groq' (picks best Groq model)...")
model = set_model("groq")
log(f"âœ… Smart match result: {model}")

# === ENHANCED FUZZY MATCHING ===
log("\n3. Enhanced fuzzy matching with intelligent preferences:")

log("Trying 'gpt-4' (should prefer OpenAI over Azure, latest version)...")
model = set_model("gpt-4")
log(f"âœ… Enhanced fuzzy match: {model}")

log("Trying 'claude' (should prefer Sonnet over Haiku)...")
model = set_model("claude")
log(f"âœ… Enhanced fuzzy match: {model}")

log("Trying 'gemini' (should prefer Pro over Flash)...")
model = set_model("gemini")
log(f"âœ… Enhanced fuzzy match: {model}")

# === CASE INSENSITIVE MATCHING ===
log("\n4. Case insensitive matching:")

log("Trying 'GPT-4O' (uppercase)...")
model = set_model("GPT-4O")
log(f"âœ… Case insensitive match: {model}")

log("Trying 'Claude' (mixed case)...")
model = set_model("Claude")
log(f"âœ… Case insensitive match: {model}")

# === TEST THE SELECTED MODEL ===
log("\n5. Testing the selected model:")
log("Current model status after all changes:")
final_model = set_model()

log("\nTesting model functionality...")
response = reason("What is 2+2? Answer with just the number.")
log(f"Model response: {response}")

log("\nðŸŽ‰ Enhanced set_model example completed!")
log("Key improvements:")
log("  âœ… Provider-grouped display")
log("  âœ… Smart provider matching")
log("  âœ… Enhanced fuzzy matching")
log("  âœ… Intelligent model preferences")
log("  âœ… Beautiful emoji-enhanced output")
log("  âœ… Comprehensive user guidance")

# Note: Only models with API keys in your environment will be shown:
# - OpenAI: OPENAI_API_KEY
# - Anthropic: ANTHROPIC_API_KEY
# - Google: GOOGLE_API_KEY
# - Groq: GROQ_API_KEY
# - Azure: AZURE_API_KEY
# - Perplexity: PERPLEXITY_API_KEY
# - Cohere: COHERE_API_KEY
# - Mistral: MISTRAL_API_KEY
# - Together: TOGETHER_API_KEY 