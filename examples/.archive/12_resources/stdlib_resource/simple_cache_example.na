# Simple Cache Resource Example
# Demonstrates basic cache operations using stdlib SimpleCacheResource

print("=== Stdlib Resource Example ===")
print("Using actual SimpleCacheResource from stdlib")
print()

# Import the SimpleCacheResource from stdlib using the correct path
from stdlib.resources import SimpleCacheResource

# Create a cache resource (no arguments needed - uses default values)
print("1. Creating cache resource...")
cache = SimpleCacheResource()
print(f"   Created cache resource: {cache.name}")
print()

# Initialize and start the cache
print("2. Initializing cache resource...")
init_result = cache.initialize()
print(f"   Initialize result: {init_result}")

start_result = cache.start()
print(f"   Start result: {start_result}")
print()

# Store some data
print("3. Storing data in cache...")
set_result1 = cache.query("set:user:john_doe")
set_result2 = cache.query("set:email:john@example.com")
set_result3 = cache.query("set:age:30")
set_result4 = cache.query("set:city:San Francisco")

print("   Set results:")
print(f"     user: {set_result1}")
print(f"     email: {set_result2}")
print(f"     age: {set_result3}")
print(f"     city: {set_result4}")
print()

# Retrieve data
print("4. Retrieving data from cache...")
get_result1 = cache.query("get:user")
get_result2 = cache.query("get:email")
get_result3 = cache.query("get:age")
get_result4 = cache.query("get:city")

print("   Get results:")
print(f"     user: {get_result1}")
print(f"     email: {get_result2}")
print(f"     age: {get_result3}")
print(f"     city: {get_result4}")
print()

# Check cache statistics using the get_stats method
print("5. Checking cache statistics...")
stats = cache.get_stats()
print("   Cache statistics:")
print(f"     name: {stats['name']}")
print(f"     state: {stats['state']}")
print(f"     max_size: {stats['max_size']}")
print(f"     ttl_seconds: {stats['ttl_seconds']}")
print(f"     items: {stats['items']}")
print(f"     hits: {stats['hits']}")
print(f"     misses: {stats['misses']}")
print()

# Delete a cache entry
print("6. Deleting a cache entry...")
delete_result = cache.query("delete:age")
print(f"   Delete result: {delete_result}")

# Verify deletion
verify_result = cache.query("get:age")
print(f"   Verification (should be empty): {verify_result}")
print()

# Test invalid operation
print("7. Testing invalid operation...")
invalid_result = cache.query("invalid:operation")
print(f"   Invalid operation result: {invalid_result}")
print()

print("Stdlib resource example completed!")
print("This example used the actual SimpleCacheResource from stdlib")
print("The resource is a Dana (.na) struct with simple, lightweight functionality.")
print()
print("Supported operations:")
print("  - get:key - Retrieve a value from cache")
print("  - set:key:value - Store a value in cache")
print("  - delete:key - Remove a value from cache")
print()
print("Import syntax: from stdlib.resources import SimpleCacheResource")
print("This works because /dana/libs/stdlib is in DANAPATH")
