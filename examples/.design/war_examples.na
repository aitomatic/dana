# Dana Core Concepts: Agent, Resource, Workflow
# - Agents can think and act on their own
# - Resources give them access to real-world data or domain knowledge
# - Workflows turn expertise into repeatable, reliable actions

# --- Session 1: Agent ---
# Spin up an agent. Tell it something about yourself.
agent Helen
print(Helen.chat("Hi, I'm Christopher."))
print(Helen.chat("I specialize in Dana programming language."))
# End Session 1

# --- Session 2: Agent (new run) ---
# Open a new session. Ask Neo about yourself.
agent Helen
print(Helen.chat("What do you know about me?"))
print(Helen.reason("How do analysts measure liquidity?"))

# --- Session 3: Agent + Resource ---
# Add a Resource: AMD’s 10-K.
resource_amd_annual_report = get_resource('rag', sources=['../resources/docs/AMD_2022_10K.pdf'])

PROBLEM = "Does AMD have enough liquid assets to cover short-term liabilities?"
print(Helen.solve(PROBLEM, resources=[resource_amd_annual_report]))

# --- Session 4: Agent + Resource + Workflow ---
# Add a Workflow: codify expert steps for structured results.
from knows.financial_analysis import workflow_calc_quick_ratio

print(Helen.solve(
    PROBLEM,
    resources=[resource_amd_annual_report],
    workflows=[workflow_calc_quick_ratio]
))

# --- Optional: Web Search (live) ---
# Add a web search resource for live context.
resource_aitomatic_websearch = get_resource('mcp', url='https://demo.mcp.aitomatic.com/websearch_v2')

trend_q = "Based on recent sources, how is AMD’s liquidity trending since the 2022 10-K?"
print(Helen.solve(trend_q, resources=[resource_aitomatic_websearch, resource_amd_annual_report]))

# --- Recap ---

# Agent:
# Neo can chat, reason, solve problems, and remember context.

# Agent + Resource:
# With AMD’s 10-K as a resource, Neo grounds its answers in real financial data instead of relying only on general knowledge.

# Agent + Resource + Workflow:
# With a quick ratio workflow, Neo applies structured steps to calculate liquidity consistently and reliably every time.