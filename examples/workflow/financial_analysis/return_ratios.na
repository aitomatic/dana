"""Return on Capital Metrics."""


# TODO: parenthesized importing in Dana
# from .fin_statements import (
#     get_total_asset_2y,
#     get_equity_2y,
#     get_net_income,
# )
from .fin_statements import get_total_asset_2y, get_equity_2y, get_net_income

from .utils import over_avg_denom, CompanyAndPeriodAndCurrency


__all__ = [
    'calc_roa_ratio',
    'calc_roe_ratio',
]


"""
Calculate `Return on (Total) Assets, a.k.a. RoA or RoTA`
of {COMPANY} for {PERIOD} annual fiscal period
as percentage value according to formula:

`Return on (Total) Assets, a.k.a. RoA or RoTA` = (
    `Net Income, a.k.a. Net Profit, or Net Earnings (or Loss(es)) (Attributable to Shareholders)` /
    `average Total Assets, typically between two consecutive fiscal year-ends`
)
"""
# TODO: lambdas in Dana
def _calc_roa_ratio_fn(net_income, total_asset_nums):
    return over_avg_denom(net_income, total_asset_nums)
# calc_roa_ratio = (
#     [get_net_income, get_total_asset_2y] |
#     (lambda net_income, total_asset_nums: over_avg_denom(net_income, total_asset_nums))
# )
calc_roa_ratio = (
    [get_net_income, get_total_asset_2y] | _calc_roa_ratio_fn
)


"""
Calculate `Return on Equity, a.k.a. RoE`
of {COMPANY} for {PERIOD} annual fiscal period
as percentage value according to formula:

`Return on Equity, a.k.a. RoE` = (
    `Net Income, a.k.a. Net Profit, or Net Earnings (or Loss(es)) (Attributable to Shareholders)` /
    `average Equity, typically between two consecutive fiscal year-ends`
)
"""
# TODO: lambdas in Dana
def _calc_roe_ratio_fn(net_income, equity_nums):
    return over_avg_denom(net_income, equity_nums)
# calc_roe_ratio = (
#     [get_net_income, get_equity_2y] |
#     (lambda net_income, equity_nums: over_avg_denom(net_income, equity_nums))
# )
calc_roe_ratio = (
    [get_net_income, get_equity_2y] | _calc_roe_ratio_fn
)
