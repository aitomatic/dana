"""Income Utilization Metrics."""


# TODO: relative importing & parenthesized importing in Dana
# from fin_statements import (
#     get_ebit,
#     get_int_exp,
#
#     get_ebt,
#     get_tax_exp,
#
#     get_net_income,
#     get_div,
# )
from fin_statements import get_ebit, get_int_exp
from fin_statements import get_ebt, get_tax_exp
from fin_statements import get_net_income, get_div

# TODO: relative importing with dot notation in Dana
from fin_statements.util import CompanyAndPeriodAndCurrency


__all__ = [
    'calc_int_cov_ratio',

    'calc_eff_tax_rate',

    'calc_div_payout_ratio',
    'calc_retention_ratio',
]


"""
Calculate `Interest Coverage Ratio` of {COMPANY} for {PERIOD} fiscal period
as decimal value according to formula:

`Interest Coverage Ratio` = `Earnings before Interest & Tax, a.k.a. EBIT` / `Interest Expense`

(note that if `Earnings before Interest & Tax, a.k.a. EBIT` is negative,
 it is conventional to say `Interest Coverage Ratio` is zero)
"""
# TODO: lambdas in Dana
def _calc_int_cov_ratio_fn(ebit, int_exp):
    # TODO: ... if ... else ... pattern in Dana
    if ebit > 0:
        return ebit / int_exp
    else:
        return 0
# calc_int_cov_ratio = (
#     [get_ebit, get_int_exp] |
#     (lambda ebit, int_exp: (ebit / int_exp) if ebit > 0 else 0)
# )
calc_int_cov_ratio = (
    get_ebit | get_int_exp | _calc_int_cov_ratio_fn
)


"""
Calculate `Effective (Income) Tax Rate` of {COMPANY} for {PERIOD} fiscal period
as percentage value according to formula:

`Effective (Income) Tax Rate` = (
    `(Income) Tax Expense` /
    `Income or Profit or Earnings (or Loss(es)) before (Income) Tax(es)`
)
"""
# TODO: lambdas in Dana
def _calc_eff_tax_rate_fn(tax_exp, ebt):
    return tax_exp / ebt
# calc_eff_tax_rate = (
#     [get_tax_exp, get_ebt] | (lambda tax_exp, ebt: tax_exp / ebt)
# )
calc_eff_tax_rate = (
    get_tax_exp | get_ebt | _calc_eff_tax_rate_fn
)


"""
Calculate `Dividend Payout Ratio` of {COMPANY} for {PERIOD} fiscal period
as decimal value according to formula:

`Dividend Payout Ratio` = (
    `Cash Dividends` /
    `Net Income, a.k.a. Net Profit, or Net Earnings (or Loss(es)) (Attributable to Shareholders)`
)
"""
# TODO: lambdas in Dana
def _calc_div_payout_ratio_fn(dividend, net_income):
    return dividend / net_income
# calc_div_payout_ratio = (
#     [get_div, get_net_income] | (lambda dividend, net_income: dividend / net_income)
# )
calc_div_payout_ratio = (
    get_div | get_net_income | _calc_div_payout_ratio_fn
)


"""
Calculate `Retention Ratio` of {COMPANY} for {PERIOD} fiscal period
as decimal value according to formula:

`Retention Ratio` = 1 - (
    `Cash Dividends` /
    `Net Income, a.k.a. Net Profit, or Net Earnings (or Loss(es)) (Attributable to Shareholders)`
)
"""
# TODO: lambdas in Dana
def _calc_retention_ratio_fn(div_payout_ratio):
    return 1 - div_payout_ratio
# calc_retention_ratio = (
#     calc_div_payout_ratio | (lambda div_payout_ratio: 1 - div_payout_ratio)
# )
calc_retention_ratio = (
    get_net_income | get_div | _calc_retention_ratio_fn
)
