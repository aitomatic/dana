"""Adjusted Income Metrics."""


# TODO: relative importing & parenthesized importing in Dana
# from fin_statements import (
#     get_op_income, get_op_income_2y, get_op_income_3y,
#
#     get_deprec_and_amort, get_deprec_and_amort_2y, get_deprec_and_amort_3y,
# )
from fin_statements import get_op_income, get_op_income_2y, get_op_income_3y
from fin_statements import get_deprec_and_amort, get_deprec_and_amort_2y, get_deprec_and_amort_3y

# TODO: relative importing with dot notation in Dana
from fin_statements.util import CompanyAndPeriodAndCurrency, CurrAndPrevNums


__all__ = [
    'calc_ebitda', 'calc_ebitda_2y', 'calc_ebitda_3y',
]


"""
Calculate `(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA`
of {COMPANY} for {PERIOD} fiscal period in {CURRENCY} according to formula:

`(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA` = (
    `(Unadjusted) Operating Income, a.k.a. Operating Profit, or Operating Earnings (or Loss(es))` +
    `Depreciation & Amortization, a.k.a. D&A (of Fixed Assets or Property, Plant & Equipment (PP&E))`
)
"""
calc_ebitda = (
    [get_op_income, get_deprec_and_amort] | sum
)

"""
Calculate `(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA`
for past 2 annual fiscal periods in {CURRENCY} according to formula:

`(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA` = (
    `(Unadjusted) Operating Income, a.k.a. Operating Profit, or Operating Earnings (or Loss(es))` +
    `Depreciation & Amortization, a.k.a. D&A (of Fixed Assets or Property, Plant & Equipment (PP&E))`
)
"""
# TODO: lambdas in Dana
def _calc_ebitda_2y_sum(op_income_nums, deprec_and_amort_nums):
    return CurrAndPrevNums(curr=op_income_nums.curr + deprec_and_amort_nums.curr,
                           prev=op_income_nums.prev + deprec_and_amort_nums.prev,
                           unit_of_measurement=op_income_nums.unit_of_measurement)
# calc_ebitda_2y = (
#     [get_op_income_2y, get_deprec_and_amort_2y] | (
#         lambda op_income_nums, deprec_and_amort_nums: CurrAndPrevNums(
#             curr=op_income_nums.curr + deprec_and_amort_nums.curr,
#             prev=op_income_nums.prev + deprec_and_amort_nums.prev,
#             unit_of_measurement=op_income_nums.unit_of_measurement
#         )
#     )
# )
calc_ebitda_2y = (
    [get_op_income_2y, get_deprec_and_amort_2y] | _calc_ebitda_2y_sum
)


"""
Calculate `(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA`
for past 3 annual fiscal periods in {CURRENCY} according to formula:

`(Unadjusted) Earnings before Interest, Tax, Depreciation & Amortization, a.k.a. EBITDA` = (
    `(Unadjusted) Operating Income, a.k.a. Operating Profit, or Operating Earnings (or Loss(es))` +
    `Depreciation & Amortization, a.k.a. D&A (of Fixed Assets or Property, Plant & Equipment (PP&E))`
)
"""
# TODO: lambdas in Dana
def _calc_ebitda_3y_sum(op_income_nums, deprec_and_amort_nums):
    return (
        op_income_nums[0] + deprec_and_amort_nums[0],
        op_income_nums[1] + deprec_and_amort_nums[1],
        op_income_nums[2] + deprec_and_amort_nums[2]
    )
# calc_ebitda_3y = (
#     [get_op_income_3y, get_deprec_and_amort_3y] | (
#         lambda op_income_nums, deprec_and_amort_nums: (
#             op_income_nums[0] + deprec_and_amort_nums[0],
#             op_income_nums[1] + deprec_and_amort_nums[1],
#             op_income_nums[2] + deprec_and_amort_nums[2]
#         )
#     )
# )
calc_ebitda_3y = (
    [get_op_income_3y, get_deprec_and_amort_3y] | _calc_ebitda_3y_sum
)
