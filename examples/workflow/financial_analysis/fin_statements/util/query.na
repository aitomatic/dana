"""Financial Data Query."""


# TODO: relative importing in Dana
from fin_statements.util.types import CompanyAndPeriodAndCurrency


__all__ = ['query_fin_data']


def query_fin_data(args: CompanyAndPeriodAndCurrency,
                   line_item: str, statement: str,
                   as_at_period_end: bool = False,
                   n_years: int = 1) -> str:  # TODO: Literal[1, 2, 3]
    """Query financial statement item value(s)."""

    # TODO: ... if ... else ... pattern in Dana

    if n_years == 1:
        if as_at_period_end:
            time_period_str: str = f"as at {args.period.upper()} fiscal period end"
        else:
            time_period_str: str = f"for {args.period.upper()} fiscal period"

        query: str = f"""
What is value in {args.currency.upper()} of

`{line_item}`
(or most similar-meaning reported line item)

on `{statement}`
(or most similar-meaning statement)

of {args.company.upper()}

{time_period_str}?
"""

    else:
        if n_years == 2:
            if as_at_period_end:
                time_period_str: str = (
f"""
as at following two annual fiscal period ends:
- previous annual fiscal period end immediately preceding {args.period.upper()}; and
- current {args.period.upper()} annual fiscal period end
""")
            else:
                time_period_str: str = (
f"""
for following two annual fiscal periods:
- previous annual fiscal period end immediately preceding {args.period.upper()}; and
- current {args.period.upper()} annual fiscal period end
""")

        else:
            if as_at_period_end:
                time_period_str: str = (
f"""
as at ends of past 3 annual fiscal periods
with the last year being {args.period.upper()} annual fiscal period
""")

            else:
                time_period_str: str = (
f"""
for past 3 fiscal years
with the last year being {args.period.upper()} annual fiscal period
""")

        query: str = f"""
What are values in {args.currency.upper()} of

`{line_item}`
(or most similar-meaning reported line item)

on `{statement}`
(or most similar-meaning statement)

of {args.company.upper()}

{time_period_str}?
"""

    return reason(query)
