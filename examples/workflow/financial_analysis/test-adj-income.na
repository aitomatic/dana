"""Test Adjusted Income Metrics."""

from adj_income import calc_ebitda, calc_ebitda_2y, calc_ebitda_3y

from test import TEST_DOC_PATH

from tqdm.py import tqdm

FUNCS_TO_TEST: dict[str, callable] = {
    'calc_ebitda': calc_ebitda,
    'calc_ebitda_2y': calc_ebitda_2y,
    'calc_ebitda_3y': calc_ebitda_3y,
}

def __main__(func_name: str = 'all'):
    with use('rag', sources=[TEST_DOC_PATH]) as test_docs:
        if func_name in FUNCS_TO_TEST:
            print(f'TESTING {func_name}...')
            print(FUNCS_TO_TEST[func_name]())

        else:
            for func_name in FUNCS_TO_TEST:  # TODO: key-value pair unpacking in Dana
                print(f'TESTING {func_name}...')
                print(FUNCS_TO_TEST[func_name]())

# Run __main__()
#__main__()
print(f"TEST_DOC_PATH: {TEST_DOC_PATH}")
print(f"FUNCS_TO_TEST: {FUNCS_TO_TEST}")
for func_name in FUNCS_TO_TEST:
    print(f"TESTING {func_name}...")
    func = FUNCS_TO_TEST[func_name]
    print(f"func: {func}")
    print(f"FUNCS_TO_TEST[func_name](): {FUNCS_TO_TEST[func_name](None)}")
    # func(None)
