"""Test Leverage Metrics."""

# TODO: relative importing & parenthesized importing in Dana
# from leverage import (
#     calc_total_debt, calc_total_debt_2y, calc_total_debt_3y,
#
#     calc_de_ratio,
# )
from leverage import calc_total_debt, calc_total_debt_2y, calc_total_debt_3y
from leverage import calc_de_ratio

from test import TEST_DOC_PATH

from tqdm.py import tqdm

FUNCS_TO_TEST: dict[str, callable] = {
    'calc_total_debt': calc_total_debt,
    'calc_total_debt_2y': calc_total_debt_2y,
    'calc_total_debt_3y': calc_total_debt_3y,

    'calc_de_ratio': calc_de_ratio,
}

def __main__(func_name: str = 'all'):
    with use('rag', sources=[TEST_DOC_PATH]) as test_docs:
        if func_name in FUNCS_TO_TEST:
            print(f'TESTING {func_name}...')
            print(FUNCS_TO_TEST[func_name]())

        else:
            for func_name in FUNCS_TO_TEST:  # TODO: key-value pair unpacking in Dana
                print(f'TESTING {func_name}...')
                print(FUNCS_TO_TEST[func_name]())
