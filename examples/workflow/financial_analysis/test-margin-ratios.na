"""Test Margin Ratios."""

# TODO: parenthesized importing in Dana
# from margin_ratios import (
#     calc_cogs_margin, calc_cogs_margin_3y_avg,
#
#     calc_gross_margin, calc_gross_margin_3y_avg,
#
#     calc_ebitda_margin, calc_ebitda_margin_3y_avg,
#
#     calc_da_margin,
#
#     calc_op_margin, calc_op_margin_3y_avg,
#
#     calc_ebit_margin, calc_ebit_margin_3y_avg,
#
#     calc_net_margin, calc_net_margin_3y_avg,
# )
from margin_ratios import calc_cogs_margin, calc_cogs_margin_3y_avg
from margin_ratios import calc_gross_margin, calc_gross_margin_3y_avg
from margin_ratios import calc_ebitda_margin, calc_ebitda_margin_3y_avg
from margin_ratios import calc_da_margin
from margin_ratios import calc_op_margin, calc_op_margin_3y_avg
from margin_ratios import calc_ebit_margin, calc_ebit_margin_3y_avg
from margin_ratios import calc_net_margin, calc_net_margin_3y_avg

from test import TEST_DOC_PATH

from tqdm.py import tqdm

FUNCS_TO_TEST: dict[str, callable] = {
    'calc_cogs_margin': calc_cogs_margin,
    'calc_cogs_margin_3y_avg': calc_cogs_margin_3y_avg,

    'calc_gross_margin': calc_gross_margin,
    'calc_gross_margin_3y_avg': calc_gross_margin_3y_avg,

    'calc_ebitda_margin': calc_ebitda_margin,
    'calc_ebitda_margin_3y_avg': calc_ebitda_margin_3y_avg,

    'calc_da_margin': calc_da_margin,

    'calc_op_margin': calc_op_margin,
    'calc_op_margin_3y_avg': calc_op_margin_3y_avg,

    'calc_ebit_margin': calc_ebit_margin,
    'calc_ebit_margin_3y_avg': calc_ebit_margin_3y_avg,

    'calc_net_margin': calc_net_margin,
    'calc_net_margin_3y_avg': calc_net_margin_3y_avg,
}

def __main__(func_name: str = 'all'):
    with use('rag', sources=[TEST_DOC_PATH]) as test_docs:
        if func_name in FUNCS_TO_TEST:
            print(f'TESTING {func_name}...')
            print(FUNCS_TO_TEST[func_name]())

        else:
            for func_name in FUNCS_TO_TEST:  # TODO: key-value pair unpacking in Dana
                print(f'TESTING {func_name}...')
                print(FUNCS_TO_TEST[func_name]())
